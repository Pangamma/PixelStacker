<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutForm_Description" xml:space="preserve">
    <value>Hi there!

Hope you are enjoying this program so far. I made this program as a proof of concept
 for creating high-quality pixel art. This system provides a few viewing options to help
you actually build the art in-game. You can also save to PNG or Schematic format.
Most importantly. you can use the double-layer mode, which combines stained glass
panels with newer Minecraft blocks to create an even larger color palette.

Below this are a few links you may find useful.  Check them out if you get a
chance. 

Taylor Love
Aka Pangamma</value>
  </data>
  <data name="AboutForm_DonateText" xml:space="preserve">
    <value>Buy me a beer!</value>
  </data>
  <data name="AboutForm_DownloadText" xml:space="preserve">
    <value>Download Location</value>
  </data>
  <data name="AboutForm_FontMakerText" xml:space="preserve">
    <value>Font Maker</value>
  </data>
  <data name="AboutForm_LinkedOInText" xml:space="preserve">
    <value>My LinkedIn</value>
  </data>
  <data name="AboutForm_MyWebsiteText" xml:space="preserve">
    <value>My website</value>
  </data>
  <data name="AboutForm_Title" xml:space="preserve">
    <value>About Pangamma's PixelStacker</value>
  </data>
  <data name="AboutForm_WoolcityProjectText" xml:space="preserve">
    <value>Visit the Wool City Project</value>
  </data>
  <data name="Action_Add_0" xml:space="preserve">
    <value>Add '{0}'</value>
  </data>
  <data name="Action_DisableQuantizer" xml:space="preserve">
    <value>Disable Quantizer</value>
  </data>
  <data name="Action_EnableQuantizer" xml:space="preserve">
    <value>Enable Quantizer</value>
  </data>
  <data name="Action_Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Action_Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Action_Redo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="Action_Remove_0" xml:space="preserve">
    <value>Remove '{0}'</value>
  </data>
  <data name="Action_ReOpen" xml:space="preserve">
    <value>Re-Open</value>
  </data>
  <data name="Action_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Action_SaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="Action_Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="Action_View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="Bottom" xml:space="preserve">
    <value>Bottom</value>
  </data>
  <data name="Bottom_Material" xml:space="preserve">
    <value>Bottom material</value>
  </data>
  <data name="CanvasEditor_ZFilter_Both" xml:space="preserve">
    <value>All layers</value>
  </data>
  <data name="CanvasEditor_ZFilter_Bottom" xml:space="preserve">
    <value>Bottom layer only</value>
  </data>
  <data name="CanvasEditor_ZFilter_Top" xml:space="preserve">
    <value>Top layer only</value>
  </data>
  <data name="ColorReducer_Algorithm" xml:space="preserve">
    <value>Quantizer Algorithm</value>
  </data>
  <data name="ColorReducer_Algorithm_Tooltip" xml:space="preserve">
    <value>Color quantization reduces the number of distinct colors of an image while keeping the new image visually similar to the original. Many different algorithms exist. Pick your favorite algorithm and use it.</value>
  </data>
  <data name="ColorReducer_ColorCache" xml:space="preserve">
    <value>Color Cache</value>
  </data>
  <data name="ColorReducer_ColorCache_Tooltip" xml:space="preserve">
    <value>Read about it more in detail here:
https://www.codeproject.com/Articles/66341/A-Simple-Yet-Quite-Powerful-Palette-Quantizer-in-C

Euclidian Distance: Slow but accurate
Locality-sensitive-hashing: Fast
Octree: Fast and accurate</value>
  </data>
  <data name="ColorReducer_ColorCount_Tooltip" xml:space="preserve">
    <value>The quantizer will reduce the number of colors to a number that is 256 or lower. </value>
  </data>
  <data name="ColorReducer_Dither" xml:space="preserve">
    <value>Dither</value>
  </data>
  <data name="ColorReducer_Dither_Tooltip" xml:space="preserve">
    <value>Many different styles to choose from. Personally I think bayer dithering looks the best.</value>
  </data>
  <data name="ColorReducer_Instructions" xml:space="preserve">
    <value>Instructions</value>
  </data>
  <data name="ColorReducer_Instructions_Tooltip" xml:space="preserve">
    <value>Art that has a large number of unique colors will take more time to build. You can reduce the total number of unique colors before you begin the rendering process. Click on the black text headers for more information.</value>
  </data>
  <data name="ColorReducer_Parallel" xml:space="preserve">
    <value>Parallel</value>
  </data>
  <data name="ColorReducer_Parallel_Tooltip" xml:space="preserve">
    <value>The number of processes to run in parallel. Using higher numbers can speed up the quantizing process.</value>
  </data>
  <data name="ColorReducer_QColorCount" xml:space="preserve">
    <value>Quantizer Color Count</value>
  </data>
  <data name="ColorReducer_RgbBucketSize" xml:space="preserve">
    <value>Max unique colors</value>
  </data>
  <data name="ColorReducer_RgbBucketSize_Tooltip" xml:space="preserve">
    <value>Speed up rendering by reducing the number of unique colors. Instead of 255^3 unique colors, you can reduce the number of unique colors 51^3. 

Fastest: 5^3
Most accurate: 255^3

Equation:
F(X) =&gt; Min(255, Round(X/5, 0) * 5)

Example:
When fragment size is 5 (51^3 colors):
f(255) =&gt; 255
f(254) =&gt; 255
f(251) =&gt; 250</value>
  </data>
  <data name="ColorReducer_Title" xml:space="preserve">
    <value>Color Reducer</value>
  </data>
  <data name="Combined_Materials" xml:space="preserve">
    <value>Combined materials</value>
  </data>
  <data name="DDL_SelectProfile" xml:space="preserve">
    <value>Select profile</value>
  </data>
  <data name="ErrorSender_ErrorOccurred" xml:space="preserve">
    <value>An error has occurred.</value>
  </data>
  <data name="ErrorSender_Github" xml:space="preserve">
    <value>Github issue.</value>
  </data>
  <data name="ErrorSender_IncludeImage" xml:space="preserve">
    <value>Are you willing to upload your current image for analysis? (Optional)</value>
  </data>
  <data name="ErrorSender_No" xml:space="preserve">
    <value>No, skip the report for now.</value>
  </data>
  <data name="ErrorSender_SavedOptions" xml:space="preserve">
    <value>Upload current saved option settings. (Required)</value>
  </data>
  <data name="ErrorSender_SendMeSomeInfo" xml:space="preserve">
    <value>Are you willing to send me some information to help me fix this error?
If yes, the following info will be zipped. Then you can send the info to 
me as a </value>
  </data>
  <data name="ErrorSender_StackTrace" xml:space="preserve">
    <value>Upload stacktrace + error messages. (Required)</value>
  </data>
  <data name="ErrorSender_Title" xml:space="preserve">
    <value>Error Reporter</value>
  </data>
  <data name="ErrorSender_Version" xml:space="preserve">
    <value>Current PixelStacker version (Required)</value>
  </data>
  <data name="ErrorSender_Yes" xml:space="preserve">
    <value>Yes! Zip some info so the issue can be fixed.</value>
  </data>
  <data name="Error_CannotExceedWorldHeight_0" xml:space="preserve">
    <value>Minecraft cannot support images larger than {0} blocks in height.</value>
  </data>
  <data name="Error_GlassRequiredForMultiLayer" xml:space="preserve">
    <value>At least one glass material must be enabled when you choose to require multiple layers.</value>
  </data>
  <data name="Error_ImageTooLarge" xml:space="preserve">
    <value>Your image is too large to process.</value>
  </data>
  <data name="Error_NeedMoreRam" xml:space="preserve">
    <value>Not enough memory. Please try again or reduce image size if problem continues.</value>
  </data>
  <data name="Error_NonGlassRequired" xml:space="preserve">
    <value>At least one non glass material must be selected.</value>
  </data>
  <data name="Error_OneMaterialRequired" xml:space="preserve">
    <value>At least one material must be enabled at all times.</value>
  </data>
  <data name="Error_SomethingIsWrong" xml:space="preserve">
    <value>Something is wrong here.</value>
  </data>
  <data name="Grid" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="GridOptions" xml:space="preserve">
    <value>Grid Options</value>
  </data>
  <data name="MainForm_Open_Title" xml:space="preserve">
    <value>Open File</value>
  </data>
  <data name="MainForm_SaveColorPalette_Title" xml:space="preserve">
    <value>Save Color Palette</value>
  </data>
  <data name="MainForm_Save_Title" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="MainForm_Title" xml:space="preserve">
    <value>Pangamma's PixelStacker</value>
  </data>
  <data name="MainForm_TS_ShowBothLayers" xml:space="preserve">
    <value>Show both layers</value>
  </data>
  <data name="MainForm_TS_ShowBottomLayer" xml:space="preserve">
    <value>Show bottom layer</value>
  </data>
  <data name="MainForm_TS_ShowTopLayer" xml:space="preserve">
    <value>Show top layer</value>
  </data>
  <data name="MainMenu_About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="MainMenu_ColorReduction" xml:space="preserve">
    <value>Color Reduction</value>
  </data>
  <data name="MainMenu_CP_AllColors_Compact" xml:space="preserve">
    <value>All colors (compact)</value>
  </data>
  <data name="MainMenu_CP_AllColors_Detailed" xml:space="preserve">
    <value>All colors (detailed)</value>
  </data>
  <data name="MainMenu_CP_Brick" xml:space="preserve">
    <value>Brick</value>
  </data>
  <data name="MainMenu_CP_Graph" xml:space="preserve">
    <value>Graph</value>
  </data>
  <data name="MainMenu_CP_Square" xml:space="preserve">
    <value>Square</value>
  </data>
  <data name="MainMenu_Dithering" xml:space="preserve">
    <value>Dithering</value>
  </data>
  <data name="MainMenu_DownOneLayer" xml:space="preserve">
    <value>Down 1 Layer</value>
  </data>
  <data name="MainMenu_Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="MainMenu_ExportSettings" xml:space="preserve">
    <value>Export Settings </value>
  </data>
  <data name="MainMenu_File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="MainMenu_Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="MainMenu_Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="MainMenu_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="MainMenu_Lang_Chinese" xml:space="preserve">
    <value>Chinese (Simplified)</value>
  </data>
  <data name="MainMenu_Lang_Danish" xml:space="preserve">
    <value>Danish</value>
  </data>
  <data name="MainMenu_Lang_Dutch" xml:space="preserve">
    <value>Dutch</value>
  </data>
  <data name="MainMenu_Lang_English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="MainMenu_Lang_French" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="MainMenu_Lang_German" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="MainMenu_Lang_Japanese" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="MainMenu_Lang_Korean" xml:space="preserve">
    <value>Korean</value>
  </data>
  <data name="MainMenu_Lang_Spanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="MainMenu_Lang_Swedish" xml:space="preserve">
    <value>Swedish</value>
  </data>
  <data name="MainMenu_LayerFiltering" xml:space="preserve">
    <value>Layer Filtering</value>
  </data>
  <data name="MainMenu_MaterialOptions" xml:space="preserve">
    <value>Material Options</value>
  </data>
  <data name="MainMenu_OtherOptions" xml:space="preserve">
    <value>Other Options</value>
  </data>
  <data name="MainMenu_PreRender" xml:space="preserve">
    <value>Pre-Render</value>
  </data>
  <data name="MainMenu_QuantizerOptions" xml:space="preserve">
    <value>Quantizer Options</value>
  </data>
  <data name="MainMenu_Render" xml:space="preserve">
    <value>Render</value>
  </data>
  <data name="MainMenu_ReOpen" xml:space="preserve">
    <value>Re-Open</value>
  </data>
  <data name="MainMenu_SaveColorPalette" xml:space="preserve">
    <value>Save color palette</value>
  </data>
  <data name="MainMenu_SaveSettings" xml:space="preserve">
    <value>Save Settings</value>
  </data>
  <data name="MainMenu_SelectMaterials" xml:space="preserve">
    <value>Select Materials</value>
  </data>
  <data name="MainMenu_ShadowRendering" xml:space="preserve">
    <value>Shadow Rendering</value>
  </data>
  <data name="MainMenu_ToggleBorder" xml:space="preserve">
    <value>Toggle Border</value>
  </data>
  <data name="MainMenu_ToggleGrid" xml:space="preserve">
    <value>Toggle Grid</value>
  </data>
  <data name="MainMenu_ToggleHideTexture" xml:space="preserve">
    <value>Toggle Hide Texture</value>
  </data>
  <data name="MainMenu_ToggleLayerFilter" xml:space="preserve">
    <value>Toggle Layer Filter</value>
  </data>
  <data name="MainMenu_TogglePalette" xml:space="preserve">
    <value>Toggle Palette</value>
  </data>
  <data name="MainMenu_ToggleProgress" xml:space="preserve">
    <value>Toggle Progress</value>
  </data>
  <data name="MainMenu_ToggleTextures" xml:space="preserve">
    <value>Toggle Textures</value>
  </data>
  <data name="MainMenu_Tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="MainMenu_UpOneLayer" xml:space="preserve">
    <value>Up 1 Layer</value>
  </data>
  <data name="MaterialSelect_ColorProfile" xml:space="preserve">
    <value>Color Profile</value>
  </data>
  <data name="MaterialSelect_IsMultiLayer" xml:space="preserve">
    <value>Enable 2nd Layer</value>
  </data>
  <data name="MaterialSelect_IsMultiLayerRequired" xml:space="preserve">
    <value>Require 2nd Layer</value>
  </data>
  <data name="MaterialSelect_IsSideView" xml:space="preserve">
    <value>Side View</value>
  </data>
  <data name="MaterialSelect_Title" xml:space="preserve">
    <value>Material Selection</value>
  </data>
  <data name="Menu_ColorReduction" xml:space="preserve">
    <value>Color Reduction</value>
  </data>
  <data name="Nothing" xml:space="preserve">
    <value>Nothing</value>
  </data>
  <data name="Operation_Cancelled" xml:space="preserve">
    <value>Operation cancelled.</value>
  </data>
  <data name="Orientation" xml:space="preserve">
    <value>Orientation</value>
  </data>
  <data name="Orientation_Horizontal" xml:space="preserve">
    <value>Horizontal</value>
  </data>
  <data name="Orientation_Vertical" xml:space="preserve">
    <value>Vertical</value>
  </data>
  <data name="OtherOptions_btnFactoryReset" xml:space="preserve">
    <value>Factory Reset</value>
  </data>
  <data name="OtherOptions_cbxIsFrugalWithMaterials" xml:space="preserve">
    <value>Add extra depth shadows to renders</value>
  </data>
  <data name="OtherOptions_cbxIsSideView" xml:space="preserve">
    <value>Side View? (Affects output orientation)</value>
  </data>
  <data name="OtherOptions_cbxSkipShadowRendering" xml:space="preserve">
    <value>Skip shadow rendering</value>
  </data>
  <data name="OtherOptions_ConfirmFactoryReset" xml:space="preserve">
    <value>Are you sure you want to reset all PixelStacker options back to default settings? Includes materials, sizes, view states, rendering options, etc.</value>
  </data>
  <data name="OtherOptions_GridColor" xml:space="preserve">
    <value>Grid Color</value>
  </data>
  <data name="OtherOptions_GridSize" xml:space="preserve">
    <value>Grid Size</value>
  </data>
  <data name="OtherOptions_Instructions" xml:space="preserve">
    <value>Enter a max width or max height to limit the output size.</value>
  </data>
  <data name="OtherOptions_MaxHeight" xml:space="preserve">
    <value>Max Height</value>
  </data>
  <data name="OtherOptions_MaxWidth" xml:space="preserve">
    <value>Max Width</value>
  </data>
  <data name="OtherOptions_Title" xml:space="preserve">
    <value>Other Options</value>
  </data>
  <data name="PreRenderOptions_Algorithm" xml:space="preserve">
    <value>Algorithm</value>
  </data>
  <data name="PreRenderOptions_Algorithm_Tooltip" xml:space="preserve">
    <value>Different algorithms use different strategies for 
combining colors together. Some use color buckets,
others use locational distance to nearby colors. Try
them all and decide which one is your favorite.</value>
  </data>
  <data name="PreRenderOptions_ColorCache" xml:space="preserve">
    <value>Color Cache</value>
  </data>
  <data name="PreRenderOptions_ColorCacheSize" xml:space="preserve">
    <value>Color Cache Size</value>
  </data>
  <data name="PreRenderOptions_ColorCacheSize_Tooltip" xml:space="preserve">
    <value>Smaller values are faster but less accurate.
Higher values are slower but more accurate.</value>
  </data>
  <data name="PreRenderOptions_ColorCount" xml:space="preserve">
    <value>Color Count</value>
  </data>
  <data name="PreRenderOptions_ColorCount_Tooltip" xml:space="preserve">
    <value>Max color count.</value>
  </data>
  <data name="PreRenderOptions_Dither" xml:space="preserve">
    <value>Dither</value>
  </data>
  <data name="PreRenderOptions_Dither_Tooltip" xml:space="preserve">
    <value>Some people like dithering.
I don't. I never do. I hate 
dithering. But hey- you do you.</value>
  </data>
  <data name="PreRenderOptions_Parallel" xml:space="preserve">
    <value>Parallel</value>
  </data>
  <data name="PreRenderOptions_Parallel_Tooltip" xml:space="preserve">
    <value>Speed up the quantizing process by taking
advantage of a multicore CPU. 

Lower values = more stable
Higher values = faster
Super high values = possible glitches</value>
  </data>
  <data name="PreRenderOptions_QuantizerSettings" xml:space="preserve">
    <value>QuantizerSettings</value>
  </data>
  <data name="Progress_CompiledColorMap" xml:space="preserve">
    <value>Color map has been compiled.</value>
  </data>
  <data name="Progress_CompilingColorMap" xml:space="preserve">
    <value>Compiling color map.</value>
  </data>
  <data name="Progress_Finished" xml:space="preserve">
    <value>Finished.</value>
  </data>
  <data name="Progress_PreparingCanvasForTextures" xml:space="preserve">
    <value>Preparing canvas for painting.</value>
  </data>
  <data name="Progress_QuantizingImage" xml:space="preserve">
    <value>Quantizing Image</value>
  </data>
  <data name="RenderedImagePanel_AddAll" xml:space="preserve">
    <value>Add all</value>
  </data>
  <data name="RenderedImagePanel_AvgColorCode" xml:space="preserve">
    <value>Average Color Code</value>
  </data>
  <data name="RenderedImagePanel_MaterialFilter" xml:space="preserve">
    <value>Material Filter</value>
  </data>
  <data name="RenderedImagePanel_RemoveAll" xml:space="preserve">
    <value>Remove all</value>
  </data>
  <data name="RenderedImagePanel_ReplaceColor" xml:space="preserve">
    <value>Replace Color (Requires Re-Render)</value>
  </data>
  <data name="RenderEngine_ConvertingToBlocks" xml:space="preserve">
    <value>Converting pixels into Minecraft blocks.</value>
  </data>
  <data name="Sizing" xml:space="preserve">
    <value>Sizing</value>
  </data>
  <data name="Tools_Brush" xml:space="preserve">
    <value>Paint brush</value>
  </data>
  <data name="Tools_BrushWidth" xml:space="preserve">
    <value>Brush width</value>
  </data>
  <data name="Tools_Eraser" xml:space="preserve">
    <value>Erase</value>
  </data>
  <data name="Tools_Fill" xml:space="preserve">
    <value>Fill</value>
  </data>
  <data name="Tools_PanZoom" xml:space="preserve">
    <value>Pan and zoom</value>
  </data>
  <data name="Tools_Pencil" xml:space="preserve">
    <value>Pencil</value>
  </data>
  <data name="Tools_Picker" xml:space="preserve">
    <value>Color picker</value>
  </data>
  <data name="Tools_WEOrigin" xml:space="preserve">
    <value>World Edit origin selector</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="Top_Material" xml:space="preserve">
    <value>Top material</value>
  </data>
</root>